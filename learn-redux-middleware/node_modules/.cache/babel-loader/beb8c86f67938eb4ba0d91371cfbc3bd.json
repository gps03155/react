{"ast":null,"code":"// import {createAction, handleActions} from 'redux-actions';\n//\n// const INCREASE = 'counter/INCREASE';\n// const DECREASE = 'counter/DECREASE';\n//\n// export const increase = createAction(INCREASE);\n// export const decrease = createAction(DECREASE);\n//\n// export const increaseAsync = () => dispatch => {\n//     setTimeout(() => {\n//         dispatch(increase());\n//     }, 1000)\n// }\n//\n// export const decreaseAsync = () => dispatch => {\n//     setTimeout(() => {\n//         dispatch(decrease());\n//     }, 1000)\n// }\n//\n// const initialState = 0;\n//\n// const counter = handleActions({\n//     [INCREASE]: state => state + 1,\n//     [DECREASE]: state => state - 1\n// }, initialState);\n//\n// export default counter;\nimport { createAction, handleActions } from 'redux-actions';\nimport { delay, put, select, takeEvery, takeLatest } from 'redux-saga/effects';\nconst INCREASE = 'counter/INCREASE';\nconst DECREASE = 'counter/DECREASE';\nconst INCREASE_ASYNC = 'counter/INCREASE_ASYNC';\nconst DECREASE_ASYNC = 'counter/DECREASE_ASYNC';\nexport const increase = createAction(INCREASE);\nexport const decrease = createAction(DECREASE);\nexport const increaseAsync = createAction(INCREASE_ASYNC, () => undefined);\nexport const decreaseAsync = createAction(DECREASE_ASYNC, () => undefined);\n\nfunction* increaseSaga() {\n  yield delay(1000);\n  yield put(increase());\n}\n\nfunction* decreaseSaga() {\n  yield delay(1000);\n  yield put(decrease());\n}\n\nexport function* counterSaga() {\n  yield takeEvery(INCREASE_ASYNC, increaseSaga);\n  yield takeLatest(DECREASE_ASYNC, decreaseSaga);\n}\nconst initialState = 0;\nconst counter = handleActions({\n  [INCREASE]: state => state + 1,\n  [DECREASE]: state => state - 1\n}, initialState);\nexport default counter;","map":{"version":3,"sources":["/Users/psh/PycharmProjects/learn-redux-middleware/src/modules/counter.js"],"names":["createAction","handleActions","delay","put","select","takeEvery","takeLatest","INCREASE","DECREASE","INCREASE_ASYNC","DECREASE_ASYNC","increase","decrease","increaseAsync","undefined","decreaseAsync","increaseSaga","decreaseSaga","counterSaga","initialState","counter","state"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,SAAQA,YAAR,EAAsBC,aAAtB,QAA0C,eAA1C;AACA,SAAQC,KAAR,EAAeC,GAAf,EAAoBC,MAApB,EAA4BC,SAA5B,EAAuCC,UAAvC,QAAwD,oBAAxD;AAGA,MAAMC,QAAQ,GAAG,kBAAjB;AACA,MAAMC,QAAQ,GAAG,kBAAjB;AACA,MAAMC,cAAc,GAAG,wBAAvB;AACA,MAAMC,cAAc,GAAG,wBAAvB;AAEA,OAAO,MAAMC,QAAQ,GAAGX,YAAY,CAACO,QAAD,CAA7B;AACP,OAAO,MAAMK,QAAQ,GAAGZ,YAAY,CAACQ,QAAD,CAA7B;AAEP,OAAO,MAAMK,aAAa,GAAGb,YAAY,CAACS,cAAD,EAAiB,MAAMK,SAAvB,CAAlC;AACP,OAAO,MAAMC,aAAa,GAAGf,YAAY,CAACU,cAAD,EAAiB,MAAMI,SAAvB,CAAlC;;AAEP,UAAUE,YAAV,GAAwB;AACpB,QAAMd,KAAK,CAAC,IAAD,CAAX;AACA,QAAMC,GAAG,CAACQ,QAAQ,EAAT,CAAT;AACH;;AAED,UAAUM,YAAV,GAAwB;AACpB,QAAMf,KAAK,CAAC,IAAD,CAAX;AACA,QAAMC,GAAG,CAACS,QAAQ,EAAT,CAAT;AACH;;AAED,OAAO,UAAUM,WAAV,GAAuB;AAC1B,QAAMb,SAAS,CAACI,cAAD,EAAiBO,YAAjB,CAAf;AACA,QAAMV,UAAU,CAACI,cAAD,EAAiBO,YAAjB,CAAhB;AACH;AAED,MAAME,YAAY,GAAG,CAArB;AAEA,MAAMC,OAAO,GAAGnB,aAAa,CAAC;AAC1B,GAACM,QAAD,GAAYc,KAAK,IAAIA,KAAK,GAAG,CADH;AAE1B,GAACb,QAAD,GAAYa,KAAK,IAAIA,KAAK,GAAG;AAFH,CAAD,EAG1BF,YAH0B,CAA7B;AAKA,eAAeC,OAAf","sourcesContent":["// import {createAction, handleActions} from 'redux-actions';\n//\n// const INCREASE = 'counter/INCREASE';\n// const DECREASE = 'counter/DECREASE';\n//\n// export const increase = createAction(INCREASE);\n// export const decrease = createAction(DECREASE);\n//\n// export const increaseAsync = () => dispatch => {\n//     setTimeout(() => {\n//         dispatch(increase());\n//     }, 1000)\n// }\n//\n// export const decreaseAsync = () => dispatch => {\n//     setTimeout(() => {\n//         dispatch(decrease());\n//     }, 1000)\n// }\n//\n// const initialState = 0;\n//\n// const counter = handleActions({\n//     [INCREASE]: state => state + 1,\n//     [DECREASE]: state => state - 1\n// }, initialState);\n//\n// export default counter;\n\n\nimport {createAction, handleActions} from 'redux-actions';\nimport {delay, put, select, takeEvery, takeLatest} from 'redux-saga/effects';\n\n\nconst INCREASE = 'counter/INCREASE';\nconst DECREASE = 'counter/DECREASE';\nconst INCREASE_ASYNC = 'counter/INCREASE_ASYNC';\nconst DECREASE_ASYNC = 'counter/DECREASE_ASYNC';\n\nexport const increase = createAction(INCREASE);\nexport const decrease = createAction(DECREASE);\n\nexport const increaseAsync = createAction(INCREASE_ASYNC, () => undefined);\nexport const decreaseAsync = createAction(DECREASE_ASYNC, () => undefined);\n\nfunction* increaseSaga(){\n    yield delay(1000);\n    yield put(increase());\n}\n\nfunction* decreaseSaga(){\n    yield delay(1000);\n    yield put(decrease());\n}\n\nexport function* counterSaga(){\n    yield takeEvery(INCREASE_ASYNC, increaseSaga);\n    yield takeLatest(DECREASE_ASYNC, decreaseSaga);\n}\n\nconst initialState = 0;\n\nconst counter = handleActions({\n    [INCREASE]: state => state + 1,\n    [DECREASE]: state => state - 1\n}, initialState)\n\nexport default counter;"]},"metadata":{},"sourceType":"module"}
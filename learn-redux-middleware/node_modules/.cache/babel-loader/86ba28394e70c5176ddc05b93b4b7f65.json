{"ast":null,"code":"import { createAction, handleActions } from 'redux-actions';\nconst INCREASE = 'counter/INCREASE';\nconst DECREASE = 'counter/DECREASE';\nexport const increase = createAction(INCREASE);\nexport const decrease = createAction(DECREASE);\nexport const increaseAsync = () => dispatch => {\n  setTimeout(() => {\n    dispatch(increase());\n  }, 1000);\n};\nexport const decreaseAsync = () => dispatch => {\n  setTimeout(() => {\n    dispatch(decrease());\n  }, 1000);\n};\nconst initialState = 0;\nconst counter = handleActions({\n  [INCREASE]: state => state + 1,\n  [DECREASE]: state => state - 1\n}, initialState);\nexport default counter;","map":{"version":3,"sources":["/Users/psh/PycharmProjects/learn-redux-middleware/src/modules/counter.js"],"names":["createAction","handleActions","INCREASE","DECREASE","increase","decrease","increaseAsync","dispatch","setTimeout","decreaseAsync","initialState","counter","state"],"mappings":"AAAA,SAAQA,YAAR,EAAsBC,aAAtB,QAA0C,eAA1C;AAEA,MAAMC,QAAQ,GAAG,kBAAjB;AACA,MAAMC,QAAQ,GAAG,kBAAjB;AAEA,OAAO,MAAMC,QAAQ,GAAGJ,YAAY,CAACE,QAAD,CAA7B;AACP,OAAO,MAAMG,QAAQ,GAAGL,YAAY,CAACG,QAAD,CAA7B;AAEP,OAAO,MAAMG,aAAa,GAAG,MAAMC,QAAQ,IAAI;AAC3CC,EAAAA,UAAU,CAAC,MAAM;AACbD,IAAAA,QAAQ,CAACH,QAAQ,EAAT,CAAR;AACH,GAFS,EAEP,IAFO,CAAV;AAGH,CAJM;AAMP,OAAO,MAAMK,aAAa,GAAG,MAAMF,QAAQ,IAAI;AAC3CC,EAAAA,UAAU,CAAC,MAAM;AACbD,IAAAA,QAAQ,CAACF,QAAQ,EAAT,CAAR;AACH,GAFS,EAEP,IAFO,CAAV;AAGH,CAJM;AAMP,MAAMK,YAAY,GAAG,CAArB;AAEA,MAAMC,OAAO,GAAGV,aAAa,CAAC;AAC1B,GAACC,QAAD,GAAYU,KAAK,IAAIA,KAAK,GAAG,CADH;AAE1B,GAACT,QAAD,GAAYS,KAAK,IAAIA,KAAK,GAAG;AAFH,CAAD,EAG1BF,YAH0B,CAA7B;AAKA,eAAeC,OAAf","sourcesContent":["import {createAction, handleActions} from 'redux-actions';\n\nconst INCREASE = 'counter/INCREASE';\nconst DECREASE = 'counter/DECREASE';\n\nexport const increase = createAction(INCREASE);\nexport const decrease = createAction(DECREASE);\n\nexport const increaseAsync = () => dispatch => {\n    setTimeout(() => {\n        dispatch(increase());\n    }, 1000)\n}\n\nexport const decreaseAsync = () => dispatch => {\n    setTimeout(() => {\n        dispatch(decrease());\n    }, 1000)\n}\n\nconst initialState = 0;\n\nconst counter = handleActions({\n    [INCREASE]: state => state + 1,\n    [DECREASE]: state => state - 1\n}, initialState);\n\nexport default counter;"]},"metadata":{},"sourceType":"module"}
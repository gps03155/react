{"ast":null,"code":"var _jsxFileName = \"/Users/psh/PycharmProjects/todo-app/src/App.js\";\nimport React, { useState, useCallback, useRef, useReducer } from 'react';\nimport TodoTemplate from './components/TodoTemplate';\nimport TodoInsert from './components/TodoInsert';\nimport TodoList from './components/TodoList';\n\nfunction createBulkTodos() {\n  const array = [];\n\n  for (let i = 0; i < 2500; i++) {\n    array.push({\n      id: i,\n      text: `할일 ${i}`,\n      checked: false\n    });\n  }\n\n  return array;\n}\n\nfunction todoReducer(todos, action) {\n  switch (action.type) {\n    case 'INSERT':\n      return todos.concat(action.todo);\n\n    case 'REMOVE':\n      return todos.filter(todo => todo.id !== action.id);\n\n    case 'TOGGLE':\n      return todos.map(todo => todo.id === action.id ? { ...todo,\n        checked: !todo.checked\n      } : todo);\n\n    default:\n      return todos;\n  }\n}\n\nfunction App() {\n  // const [todos, setTodos] = useState(createBulkTodos);\n  const [todos, dispatch] = useReducer(todoReducer, undefined, createBulkTodos);\n  console.log(dispatch, 'dispatch');\n  const nextId = useRef(2501);\n  const onInsert = useCallback(text => {\n    const todo = {\n      id: nextId.current,\n      text,\n      checked: false\n    }; // setTodos(todos => todos.concat(todo));\n\n    dispatch({\n      type: 'INSERT',\n      todo\n    });\n    nextId.current++;\n  }, []);\n  const onRemove = useCallback(id => {\n    // setTodos(todos => todos.filter(todo => todo.id !== id));\n    dispatch({\n      type: 'REMOVE',\n      id\n    });\n  }, []);\n  const onToggle = useCallback(id => {\n    // setTodos(todos => todos.map(item =>\n    //     item.id === id? {...item, checked: !item.checked} : item\n    // ));\n    dispatch({\n      type: 'TOGGLE',\n      id\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(TodoTemplate, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TodoInsert, {\n    onInsert: onInsert,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TodoList, {\n    todos: todos,\n    onRemove: onRemove,\n    onToggle: onToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/psh/PycharmProjects/todo-app/src/App.js"],"names":["React","useState","useCallback","useRef","useReducer","TodoTemplate","TodoInsert","TodoList","createBulkTodos","array","i","push","id","text","checked","todoReducer","todos","action","type","concat","todo","filter","map","App","dispatch","undefined","console","log","nextId","onInsert","current","onRemove","onToggle"],"mappings":"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","sourcesContent":["import React, {useState, useCallback, useRef, useReducer} from 'react';\nimport TodoTemplate from './components/TodoTemplate';\nimport TodoInsert from './components/TodoInsert';\nimport TodoList from './components/TodoList';\n\nfunction createBulkTodos(){\n    const array = [];\n\n    for(let i=0;i<2500;i++){\n        array.push({\n            id: i,\n            text: `할일 ${i}`,\n            checked: false\n        })\n    }\n\n    return array;\n}\n\nfunction todoReducer(todos, action){\n    switch(action.type){\n        case 'INSERT':\n            return todos.concat(action.todo);\n        case 'REMOVE':\n            return todos.filter(todo => todo.id !== action.id);\n        case 'TOGGLE':\n            return todos.map(todo => todo.id === action.id? {...todo, checked: !todo.checked}: todo);\n        default:\n            return todos;\n    }\n}\n\nfunction App() {\n    // const [todos, setTodos] = useState(createBulkTodos);\n    const [todos, dispatch] = useReducer(todoReducer, undefined, createBulkTodos);\n\n    console.log(dispatch, 'dispatch');\n\n    const nextId = useRef(2501);\n\n    const onInsert = useCallback(text => {\n        const todo = {\n            id: nextId.current,\n            text,\n            checked: false\n        }\n\n        // setTodos(todos => todos.concat(todo));\n        dispatch({type: 'INSERT', todo});\n        nextId.current++;\n    }, []);\n\n    const onRemove = useCallback(id => {\n        // setTodos(todos => todos.filter(todo => todo.id !== id));\n        dispatch({type: 'REMOVE', id});\n    }, []);\n\n    const onToggle = useCallback(id => {\n        // setTodos(todos => todos.map(item =>\n        //     item.id === id? {...item, checked: !item.checked} : item\n        // ));\n        dispatch({type: 'TOGGLE', id});\n    }, [])\n\n    return (\n        <TodoTemplate>\n            <TodoInsert onInsert={onInsert}/>\n            <TodoList todos={todos} onRemove={onRemove} onToggle={onToggle}/>\n        </TodoTemplate>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
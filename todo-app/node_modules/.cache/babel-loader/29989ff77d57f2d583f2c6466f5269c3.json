{"ast":null,"code":"import _objectSpread from\"/Users/psh/PycharmProjects/todo-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/psh/PycharmProjects/todo-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useCallback,useRef}from'react';import TodoTemplate from'./components/TodoTemplate';import TodoInsert from'./components/TodoInsert';import TodoList from'./components/TodoList';function createBulkTodos(){var array=[];for(var i=0;i<2500;i++){array.push({id:i,text:\"\\uD560\\uC77C \".concat(i),checked:false});}return array;}function App(){var _useState=useState(createBulkTodos),_useState2=_slicedToArray(_useState,2),todos=_useState2[0],setTodos=_useState2[1];var nextId=useRef(2501);var onInsert=useCallback(function(text){var todo={id:nextId.current,text:text,checked:false};setTodos(function(todos){return todos.concat(todo);});nextId.current++;},[]);var onRemove=useCallback(function(id){setTodos(function(todos){return todos.filter(function(todo){return todo.id!==id;});});},[]);var onToggle=useCallback(function(id){setTodos(function(todos){return todos.map(function(item){return item.id===id?_objectSpread(_objectSpread({},item),{},{checked:!item.checked}):item;});});},[]);return/*#__PURE__*/React.createElement(TodoTemplate,null,/*#__PURE__*/React.createElement(TodoInsert,{onInsert:onInsert}),/*#__PURE__*/React.createElement(TodoList,{todos:todos,onRemove:onRemove,onToggle:onToggle}));}export default App;","map":{"version":3,"sources":["/Users/psh/PycharmProjects/todo-app/src/App.js"],"names":["React","useState","useCallback","useRef","TodoTemplate","TodoInsert","TodoList","createBulkTodos","array","i","push","id","text","checked","App","todos","setTodos","nextId","onInsert","todo","current","concat","onRemove","filter","onToggle","map","item"],"mappings":"mTAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,WAAzB,CAAsCC,MAAtC,KAAmD,OAAnD,CACA,MAAOC,CAAAA,YAAP,KAAyB,2BAAzB,CACA,MAAOC,CAAAA,UAAP,KAAuB,yBAAvB,CACA,MAAOC,CAAAA,QAAP,KAAqB,uBAArB,CAEA,QAASC,CAAAA,eAAT,EAA0B,CACtB,GAAMC,CAAAA,KAAK,CAAG,EAAd,CAEA,IAAI,GAAIC,CAAAA,CAAC,CAAC,CAAV,CAAYA,CAAC,CAAC,IAAd,CAAmBA,CAAC,EAApB,CAAuB,CACnBD,KAAK,CAACE,IAAN,CAAW,CACPC,EAAE,CAAEF,CADG,CAEPG,IAAI,wBAAQH,CAAR,CAFG,CAGPI,OAAO,CAAE,KAHF,CAAX,EAKH,CAED,MAAOL,CAAAA,KAAP,CACH,CAED,QAASM,CAAAA,GAAT,EAAe,eACeb,QAAQ,CAACM,eAAD,CADvB,wCACJQ,KADI,eACGC,QADH,eAGX,GAAMC,CAAAA,MAAM,CAAGd,MAAM,CAAC,IAAD,CAArB,CAEA,GAAMe,CAAAA,QAAQ,CAAGhB,WAAW,CAAC,SAAAU,IAAI,CAAI,CACjC,GAAMO,CAAAA,IAAI,CAAG,CACTR,EAAE,CAAEM,MAAM,CAACG,OADF,CAETR,IAAI,CAAJA,IAFS,CAGTC,OAAO,CAAE,KAHA,CAAb,CAMAG,QAAQ,CAAC,SAAAD,KAAK,QAAIA,CAAAA,KAAK,CAACM,MAAN,CAAaF,IAAb,CAAJ,EAAN,CAAR,CACAF,MAAM,CAACG,OAAP,GACH,CAT2B,CASzB,EATyB,CAA5B,CAWA,GAAME,CAAAA,QAAQ,CAAGpB,WAAW,CAAC,SAAAS,EAAE,CAAI,CAC/BK,QAAQ,CAAC,SAAAD,KAAK,QAAIA,CAAAA,KAAK,CAACQ,MAAN,CAAa,SAAAJ,IAAI,QAAIA,CAAAA,IAAI,CAACR,EAAL,GAAYA,EAAhB,EAAjB,CAAJ,EAAN,CAAR,CACH,CAF2B,CAEzB,EAFyB,CAA5B,CAIA,GAAMa,CAAAA,QAAQ,CAAGtB,WAAW,CAAC,SAAAS,EAAE,CAAI,CAC/BK,QAAQ,CAAC,SAAAD,KAAK,QAAIA,CAAAA,KAAK,CAACU,GAAN,CAAU,SAAAC,IAAI,QAC5BA,CAAAA,IAAI,CAACf,EAAL,GAAYA,EAAZ,gCAAoBe,IAApB,MAA0Bb,OAAO,CAAE,CAACa,IAAI,CAACb,OAAzC,GAAoDa,IADxB,EAAd,CAAJ,EAAN,CAAR,CAGH,CAJ2B,CAIzB,EAJyB,CAA5B,CAMA,mBACI,oBAAC,YAAD,mBACI,oBAAC,UAAD,EAAY,QAAQ,CAAER,QAAtB,EADJ,cAEI,oBAAC,QAAD,EAAU,KAAK,CAAEH,KAAjB,CAAwB,QAAQ,CAAEO,QAAlC,CAA4C,QAAQ,CAAEE,QAAtD,EAFJ,CADJ,CAMH,CAED,cAAeV,CAAAA,GAAf","sourcesContent":["import React, {useState, useCallback, useRef} from 'react';\nimport TodoTemplate from './components/TodoTemplate';\nimport TodoInsert from './components/TodoInsert';\nimport TodoList from './components/TodoList';\n\nfunction createBulkTodos(){\n    const array = [];\n\n    for(let i=0;i<2500;i++){\n        array.push({\n            id: i,\n            text: `할일 ${i}`,\n            checked: false\n        })\n    }\n\n    return array;\n}\n\nfunction App() {\n    const [todos, setTodos] = useState(createBulkTodos);\n\n    const nextId = useRef(2501);\n\n    const onInsert = useCallback(text => {\n        const todo = {\n            id: nextId.current,\n            text,\n            checked: false\n        }\n\n        setTodos(todos => todos.concat(todo));\n        nextId.current++;\n    }, []);\n\n    const onRemove = useCallback(id => {\n        setTodos(todos => todos.filter(todo => todo.id !== id));\n    }, []);\n\n    const onToggle = useCallback(id => {\n        setTodos(todos => todos.map(item =>\n            item.id === id? {...item, checked: !item.checked} : item\n        ));\n    }, [])\n\n    return (\n        <TodoTemplate>\n            <TodoInsert onInsert={onInsert}/>\n            <TodoList todos={todos} onRemove={onRemove} onToggle={onToggle}/>\n        </TodoTemplate>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}